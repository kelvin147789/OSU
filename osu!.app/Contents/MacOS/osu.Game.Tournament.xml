<?xml version="1.0"?>
<doc>
    <assembly>
        <name>osu.Game.Tournament</name>
    </assembly>
    <members>
        <member name="T:osu.Game.Tournament.Components.ControlPanel">
            <summary>
            An element anchored to the right-hand area of a screen that provides streamer level controls.
            Should be off-screen.
            </summary>
        </member>
        <member name="M:osu.Game.Tournament.IPC.FileBasedIPC.SetIPCLocation(System.String)">
            <summary>
            Manually sets the path to the directory used for inter-process communication with a cutting-edge install.
            </summary>
            <param name="path">Path to the IPC directory</param>
            <returns>Whether the supplied path was a valid IPC directory.</returns>
        </member>
        <member name="M:osu.Game.Tournament.IPC.FileBasedIPC.AutoDetectIPCLocation">
            <summary>
            Tries to automatically detect the path to the directory used for inter-process communication
            with a cutting-edge install.
            </summary>
            <returns>Whether an IPC directory was successfully auto-detected.</returns>
        </member>
        <member name="T:osu.Game.Tournament.Models.BeatmapChoice">
            <summary>
            A beatmap choice by a team from a tournament's map pool.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Models.LadderInfo">
            <summary>
            Holds the complete data required to operate the tournament system.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Models.StableInfo">
            <summary>
            Holds the path to locate the osu! stable cutting-edge installation.
            </summary>
        </member>
        <member name="P:osu.Game.Tournament.Models.StableInfo.StablePath">
            <summary>
            Path to the IPC directory used by the stable (cutting-edge) install.
            </summary>
        </member>
        <member name="E:osu.Game.Tournament.Models.StableInfo.OnStableInfoSaved">
            <summary>
            Fired whenever stable info is successfully saved to file.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Models.TournamentMatch">
            <summary>
            A collection of two teams competing in a head-to-head match.
            </summary>
        </member>
        <member name="F:osu.Game.Tournament.Models.TournamentMatch.Current">
            <summary>
            Should not be set directly. Use LadderInfo.CurrentMatch.Value = this instead.
            </summary>
        </member>
        <member name="M:osu.Game.Tournament.Models.TournamentMatch.CancelMatchStart">
            <summary>
            Remove scores from the match, in case of a false click or false start.
            </summary>
        </member>
        <member name="M:osu.Game.Tournament.Models.TournamentMatch.StartMatch">
            <summary>
            Initialise this match with zeroed scores. Will be a noop if either team is not present.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Models.TournamentProgression">
            <summary>
            A mapping between two <see cref="T:osu.Game.Tournament.Models.TournamentMatch"/>es.
            Used for serialisation exclusively.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Models.TournamentRound">
            <summary>
            A tournament round, containing many matches, generally executed in a short time period.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Models.TournamentTeam">
            <summary>
            A team representation. For official tournaments this is generally a country.
            </summary>
        </member>
        <member name="F:osu.Game.Tournament.Models.TournamentTeam.FullName">
            <summary>
            The name of this team.
            </summary>
        </member>
        <member name="F:osu.Game.Tournament.Models.TournamentTeam.FlagName">
            <summary>
            Name of the file containing the flag.
            </summary>
        </member>
        <member name="F:osu.Game.Tournament.Models.TournamentTeam.Acronym">
            <summary>
            Short acronym which appears in the group boxes post-selection.
            </summary>
        </member>
        <member name="P:osu.Game.Tournament.Screens.Drawings.Components.VisualiserContainer.Lines">
            <summary>
            Number of lines in the visualiser.
            </summary>
        </member>
        <member name="F:osu.Game.Tournament.Screens.Drawings.Components.VisualiserContainer.VisualiserLine.Offset">
            <summary>
            Time offset.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Screens.Editors.IModelBacked`1">
            <summary>
            Provides a mechanism to access a related model from a representing class.
            </summary>
            <typeparam name="TModel">The type of model.</typeparam>
        </member>
        <member name="P:osu.Game.Tournament.Screens.Editors.IModelBacked`1.Model">
            <summary>
            The model.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Screens.IProvideVideo">
            <summary>
            Marker interface for a screen which provides its own local video background.
            </summary>
        </member>
        <member name="T:osu.Game.Tournament.Screens.Ladder.Components.ConditionalTournamentMatch">
            <summary>
            A match that may not necessarily occur.
            </summary>
        </member>
        <member name="F:osu.Game.Tournament.Screens.Ladder.Components.DrawableTournamentMatch.Changed">
            <summary>
            Fired when somethign changed that requires a ladder redraw.
            </summary>
        </member>
        <member name="M:osu.Game.Tournament.TournamentGameBase.addPlayers">
            <summary>
            Add missing player info based on user IDs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:osu.Game.Tournament.TournamentGameBase.addBeatmaps">
            <summary>
            Add missing beatmap info based on beatmap IDs
            </summary>
        </member>
    </members>
</doc>
